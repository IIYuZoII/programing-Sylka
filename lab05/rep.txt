Звіт
Лабораторна робота №5. Циклічні конструкції
П.І.Б. виконавця: Силка Михайло Микалайович

Хід роботи: 

1) Створити папку lab05
2) Створити в ній файл main.c
3) Зафіксувати зміни за допомогою команди git commit
4) Описати в файлі main.c ціль та хід роботи
5) Написати программу
6) Перевірити значення змінних за допомогою дебаггеру lldb


Результат перевірки значення змінних за допомогою дебаггеру lldb:


yuzo@yuzo-VirtualBox:~/lab/programing-Sylka/lab05$ lldb main.bin 
(lldb) target create "main.bin"
Current executable set to '/home/yuzo/lab/programing-Sylka/lab05/main.bin' (x86_64).
(lldb) l 1
   1   	/* Визначити, чи є задане ціле число простим
   2   	 * Использовать три типа цикла (все должны давать одинаковый результат)
   3   	 * К примеру число х = 73 является простым так как делится только на 1 и на само себя (73)
   4   	 * Чтобы проверить нужно сперва сделать проверку на отличие от 0, если она true, тогда заходим в цикл
   5   	 * На каждой итерации цикла нужно делить число х на счётчик по модулю, если ответ будет == 0, тогда это число не
   6   	 * является простым (за исключением счётчика = 1)
   7   	 * 
   8   	 */
   9   	
   10  	#include <stdio.h>
(lldb) l 
   11  	
   12  	int main () {
   13  	    
   14  	    int x = 73;
   15  	    int tf = 0;
   16  	
   17  	
   18  	    //Реализация при помощи цикла For
   19  	    if (x != 0){
   20  	        for (int i = 0; i < x; i++){
(lldb) l
   21  		    //Если счётчик = 0, тогда проверяем число вручную так, чтобы оно не было равно 2 и не делилось на 2 (то есть чтобы было простым)
   22  	            //Чтобы обойти случай когда число х будет 2
   23  		    //Если условие вложенного if будет false, тогда выполнится else которое пропустит дальнейшие проверки в рамках данной итерации
   24  		    if (i == 0){
   25  			if (x != 2 && x % 2 == 0){
   26  			    tf = 1;
   27  			    break;
   28  			} else {
   29  			    continue;
   30  			};	
(lldb) l
   31  		    }
   32  		    //Если счётчик = 1, пропускаем дальнейшую проверку в рамках этой итерации, т.к. любое простое число делится на 1
   33  		    if (i == 1){
   34  		        continue;
   35  		    }
   36  		    
   37  		    //Проверка делимости на все числа меньше х (по условию цикла i < x)
   38  		    if (x % i == 0){
   39  			tf = 1;
   40  			break;
(lldb) l
   41  		    }
   42  		}
   43  	    
   44  	    }
   45  	
   46  	    //Вывод результата проверки числа
   47  	    if (tf == 1){
   48  		printf ("%s\n", "Данное число не является простым (Определено при помощи цикла for)");
   49  	    } else {
   50  		printf ("%s\n", "Данное число является простым (Определено при помощи цикла for)");
(lldb) l
   51  	    }
   52  	
   53  	
   54  	    //Реализация при помощи While do:
   55  	
   56  	    int tfwd = 0;
   57  	    int count = 0;
   58  	
   59  	    while (count < x){
   60  		//Если счётчик = 0, тогда проверяем число вручную так, чтобы оно не было равно 2 и не делилось на 2 (то есть чтобы было простым)
(lldb) l
   61  	        //Чтобы обойти случай когда число х будет 2
   62  		//Если условие вложенного if будет false, тогда выполнится else которое пропустит дальнейшие проверки в рамках данной итерации
   63  		if (count == 0){
   64  		    if (x != 2 && x % 2 == 0){
   65  		        tfwd = 1;
   66  			break;
   67  		    } else {
   68  			count++;
   69  		        continue;
   70  		    }
(lldb) l
   71  		}
   72  		//Если счётчик = 1, пропускаем дальнейшую проверку в рамках этой итерации, т.к. любое простое число делится на 1
   73  		if (count == 1){
   74  		    count++;
   75  		    continue;
   76  		}
   77  	
   78  		//Проверка делимости на все числа меньше х (по условию цикла count < x)
   79  		if (x % count == 0){
   80  		    tfwd = 1;
(lldb) l
   81  		    break;
   82  		}
   83  	        count++;
   84  	    }
   85  	
   86  	
   87  	    //Вывод результата проверки числа
   88  	    if (tfwd == 1){
   89  	        printf ("%s\n", "Данное число не является простым (Определено при помощи цикла while do)");
   90  	    } else {
(lldb) l
   91  	        printf ("%s\n", "Данное число является простым (Определено при помощи цикла while do)");
   92  	    }
   93  	
   94  	
   95  	    //Реализация при помощи цикла Do While:
   96  	
   97  	    int countdw = 0;
   98  	    int tfdw = 0;
   99  	
   100 	    do {
(lldb) l
   101 		//Если счётчик = 0, тогда проверяем число вручную так, чтобы оно не было равно 2 и не делилось на 2 (то есть чтобы было простым)
   102 	        //Чтобы обойти случай когда число х будет 2
   103 		//Если условие вложенного if будет false, тогда выполнится else которое пропустит дальнейшие проверки в рамках данной итерации
   104 	
   105 		if (countdw == 0){
   106 		    if (x != 2 && x % 2 == 0){
   107 		        tfdw = 1;
   108 		        break;
   109 		    } else {
   110 		        countdw++;
(lldb) l
   111 			continue;
   112 		    }
   113 		}
   114 	
   115 		//Если счётчик = 1, пропускаем дальнейшую проверку в рамках этой итерации, т.к. любое простое число делится на 1
   116 		if (countdw == 1){
   117 		    countdw++;
   118 		    continue;
   119 		}
   120 	
(lldb) l
   121 		//Проверка делимости на все числа меньше х (по условию цикла countdw < (x-1))
   122 		if (x % countdw == 0){
   123 		    tfdw = 1;
   124 		    break;
   125 		}
   126 		countdw++;
   127 	    } while (countdw <= (x-1));
   128 	
   129 	    
   130 	    //Вывод результата проверки числа
(lldb) l
   131 	    if (tfdw == 1){
   132 	        printf ("%s\n", "Данное число не является простым (Определено при помощи цикла Do While)");
   133 	    } else {
   134 	        printf ("%s\n", "Данное число является простым (Определено при помощи цикла Do While)");
   135 	    }
   136 	
   137 	    return (0);
   138 	}
(lldb) l
(lldb) b 137
Breakpoint 1: where = main.bin`main + 707 at main.c:137:5, address = 0x00000000004013f3
(lldb) r
Process 24285 launched: '/home/yuzo/lab/programing-Sylka/lab05/main.bin' (x86_64)
Данное число является простым (Определено при помощи цикла for)
Данное число является простым (Определено при помощи цикла while do)
Данное число является простым (Определено при помощи цикла Do While)
Process 24285 stopped
* thread #1, name = 'main.bin', stop reason = breakpoint 1.1
    frame #0: 0x00000000004013f3 main.bin`main at main.c:137:5
   134 	        printf ("%s\n", "Данное число является простым (Определено при помощи цикла Do While)");
   135 	    }
   136 	
-> 137 	    return (0);
   138 	}
(lldb) fr v
(int) x = 73
(int) tf = 0
(int) tfwd = 0
(int) count = 73
(int) countdw = 73
(int) tfdw = 0



Змінні tf, tfwd, tfdw = 0, що значить що число 73 просте, тому що не має інших дільників окрім 1 та 73





Висновок: завдяки цій лабораторній роботі я навчився працювати з трьома типами циклів: for, while-do, do-while. Зумів написати три алгоритми використовуючи всі три
види циклів так, щоб всі вони видавали один й той самий результат.







